{"id":"NU6N","dependencies":[{"name":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\package.json","includedInParent":true,"mtime":1609120493490},{"name":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\package.json","includedInParent":true,"mtime":1609105065760},{"name":"../utils/common","loc":{"line":22,"column":28},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\inflate.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\utils\\common.js"},{"name":"./adler32","loc":{"line":23,"column":28},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\inflate.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\adler32.js"},{"name":"./crc32","loc":{"line":24,"column":28},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\inflate.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\crc32.js"},{"name":"./inffast","loc":{"line":25,"column":28},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\inflate.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\inffast.js"},{"name":"./inftrees","loc":{"line":26,"column":28},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\inflate.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\pako\\lib\\zlib\\inftrees.js"}],"generated":{"js":"var $NU6N$exports={},$NU6N$var$utils=$parcel$require(\"NU6N\",\"../utils/common\"),$NU6N$var$adler32=$parcel$require(\"NU6N\",\"./adler32\"),$NU6N$var$crc32=$parcel$require(\"NU6N\",\"./crc32\"),$NU6N$var$inflate_fast=$parcel$require(\"NU6N\",\"./inffast\"),$NU6N$var$inflate_table=$parcel$require(\"NU6N\",\"./inftrees\"),$NU6N$var$CODES=0,$NU6N$var$LENS=1,$NU6N$var$DISTS=2,$NU6N$var$Z_FINISH=4,$NU6N$var$Z_BLOCK=5,$NU6N$var$Z_TREES=6,$NU6N$var$Z_OK=0,$NU6N$var$Z_STREAM_END=1,$NU6N$var$Z_NEED_DICT=2,$NU6N$var$Z_STREAM_ERROR=-2,$NU6N$var$Z_DATA_ERROR=-3,$NU6N$var$Z_MEM_ERROR=-4,$NU6N$var$Z_BUF_ERROR=-5,$NU6N$var$Z_DEFLATED=8,$NU6N$var$HEAD=1,$NU6N$var$FLAGS=2,$NU6N$var$TIME=3,$NU6N$var$OS=4,$NU6N$var$EXLEN=5,$NU6N$var$EXTRA=6,$NU6N$var$NAME=7,$NU6N$var$COMMENT=8,$NU6N$var$HCRC=9,$NU6N$var$DICTID=10,$NU6N$var$DICT=11,$NU6N$var$TYPE=12,$NU6N$var$TYPEDO=13,$NU6N$var$STORED=14,$NU6N$var$COPY_=15,$NU6N$var$COPY=16,$NU6N$var$TABLE=17,$NU6N$var$LENLENS=18,$NU6N$var$CODELENS=19,$NU6N$var$LEN_=20,$NU6N$var$LEN=21,$NU6N$var$LENEXT=22,$NU6N$var$DIST=23,$NU6N$var$DISTEXT=24,$NU6N$var$MATCH=25,$NU6N$var$LIT=26,$NU6N$var$CHECK=27,$NU6N$var$LENGTH=28,$NU6N$var$DONE=29,$NU6N$var$BAD=30,$NU6N$var$MEM=31,$NU6N$var$SYNC=32,$NU6N$var$ENOUGH_LENS=852,$NU6N$var$ENOUGH_DISTS=592,$NU6N$var$MAX_WBITS=15,$NU6N$var$DEF_WBITS=$NU6N$var$MAX_WBITS;function $NU6N$var$zswap32($){return($>>>24&255)+($>>>8&65280)+((65280&$)<<8)+((255&$)<<24)}function $NU6N$var$InflateState(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new $NU6N$var$utils.Buf16(320),this.work=new $NU6N$var$utils.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function $NU6N$var$inflateResetKeep($){var e;return $&&$.state?(e=$.state,$.total_in=$.total_out=e.total=0,$.msg=\"\",e.wrap&&($.adler=1&e.wrap),e.mode=$NU6N$var$HEAD,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new $NU6N$var$utils.Buf32($NU6N$var$ENOUGH_LENS),e.distcode=e.distdyn=new $NU6N$var$utils.Buf32($NU6N$var$ENOUGH_DISTS),e.sane=1,e.back=-1,$NU6N$var$Z_OK):$NU6N$var$Z_STREAM_ERROR}function $NU6N$var$inflateReset($){var e;return $&&$.state?((e=$.state).wsize=0,e.whave=0,e.wnext=0,$NU6N$var$inflateResetKeep($)):$NU6N$var$Z_STREAM_ERROR}function $NU6N$var$inflateReset2($,e){var a,N;return $&&$.state?(N=$.state,e<0?(a=0,e=-e):(a=1+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?$NU6N$var$Z_STREAM_ERROR:(null!==N.window&&N.wbits!==e&&(N.window=null),N.wrap=a,N.wbits=e,$NU6N$var$inflateReset($))):$NU6N$var$Z_STREAM_ERROR}function $NU6N$var$inflateInit2($,e){var a,N;return $?(N=new $NU6N$var$InflateState,$.state=N,N.window=null,(a=$NU6N$var$inflateReset2($,e))!==$NU6N$var$Z_OK&&($.state=null),a):$NU6N$var$Z_STREAM_ERROR}function $NU6N$var$inflateInit($){return $NU6N$var$inflateInit2($,$NU6N$var$DEF_WBITS)}var $NU6N$var$lenfix,$NU6N$var$distfix,$NU6N$var$virgin=!0;function $NU6N$var$fixedtables($){if($NU6N$var$virgin){var e;for($NU6N$var$lenfix=new $NU6N$var$utils.Buf32(512),$NU6N$var$distfix=new $NU6N$var$utils.Buf32(32),e=0;e<144;)$.lens[e++]=8;for(;e<256;)$.lens[e++]=9;for(;e<280;)$.lens[e++]=7;for(;e<288;)$.lens[e++]=8;for($NU6N$var$inflate_table($NU6N$var$LENS,$.lens,0,288,$NU6N$var$lenfix,0,$.work,{bits:9}),e=0;e<32;)$.lens[e++]=5;$NU6N$var$inflate_table($NU6N$var$DISTS,$.lens,0,32,$NU6N$var$distfix,0,$.work,{bits:5}),$NU6N$var$virgin=!1}$.lencode=$NU6N$var$lenfix,$.lenbits=9,$.distcode=$NU6N$var$distfix,$.distbits=5}function $NU6N$var$updatewindow($,e,a,N){var r,t=$.state;return null===t.window&&(t.wsize=1<<t.wbits,t.wnext=0,t.whave=0,t.window=new $NU6N$var$utils.Buf8(t.wsize)),N>=t.wsize?($NU6N$var$utils.arraySet(t.window,e,a-t.wsize,t.wsize,0),t.wnext=0,t.whave=t.wsize):((r=t.wsize-t.wnext)>N&&(r=N),$NU6N$var$utils.arraySet(t.window,e,a-N,r,t.wnext),(N-=r)?($NU6N$var$utils.arraySet(t.window,e,a-N,N,0),t.wnext=N,t.whave=t.wsize):(t.wnext+=r,t.wnext===t.wsize&&(t.wnext=0),t.whave<t.wsize&&(t.whave+=r))),0}function $NU6N$var$inflate($,e){var a,N,r,t,i,n,v,s,U,l,o,f,d,c,h,E,b,_,k,m,w,R,u,x,T=0,D=new $NU6N$var$utils.Buf8(4),g=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!$||!$.state||!$.output||!$.input&&0!==$.avail_in)return $NU6N$var$Z_STREAM_ERROR;(a=$.state).mode===$NU6N$var$TYPE&&(a.mode=$NU6N$var$TYPEDO),i=$.next_out,r=$.output,v=$.avail_out,t=$.next_in,N=$.input,n=$.avail_in,s=a.hold,U=a.bits,l=n,o=v,R=$NU6N$var$Z_OK;$:for(;;)switch(a.mode){case $NU6N$var$HEAD:if(0===a.wrap){a.mode=$NU6N$var$TYPEDO;break}for(;U<16;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(2&a.wrap&&35615===s){a.check=0,D[0]=255&s,D[1]=s>>>8&255,a.check=$NU6N$var$crc32(a.check,D,2,0),s=0,U=0,a.mode=$NU6N$var$FLAGS;break}if(a.flags=0,a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&s)<<8)+(s>>8))%31){$.msg=\"incorrect header check\",a.mode=$NU6N$var$BAD;break}if((15&s)!==$NU6N$var$Z_DEFLATED){$.msg=\"unknown compression method\",a.mode=$NU6N$var$BAD;break}if(U-=4,w=8+(15&(s>>>=4)),0===a.wbits)a.wbits=w;else if(w>a.wbits){$.msg=\"invalid window size\",a.mode=$NU6N$var$BAD;break}a.dmax=1<<w,$.adler=a.check=1,a.mode=512&s?$NU6N$var$DICTID:$NU6N$var$TYPE,s=0,U=0;break;case $NU6N$var$FLAGS:for(;U<16;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(a.flags=s,(255&a.flags)!==$NU6N$var$Z_DEFLATED){$.msg=\"unknown compression method\",a.mode=$NU6N$var$BAD;break}if(57344&a.flags){$.msg=\"unknown header flags set\",a.mode=$NU6N$var$BAD;break}a.head&&(a.head.text=s>>8&1),512&a.flags&&(D[0]=255&s,D[1]=s>>>8&255,a.check=$NU6N$var$crc32(a.check,D,2,0)),s=0,U=0,a.mode=$NU6N$var$TIME;case $NU6N$var$TIME:for(;U<32;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}a.head&&(a.head.time=s),512&a.flags&&(D[0]=255&s,D[1]=s>>>8&255,D[2]=s>>>16&255,D[3]=s>>>24&255,a.check=$NU6N$var$crc32(a.check,D,4,0)),s=0,U=0,a.mode=$NU6N$var$OS;case $NU6N$var$OS:for(;U<16;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}a.head&&(a.head.xflags=255&s,a.head.os=s>>8),512&a.flags&&(D[0]=255&s,D[1]=s>>>8&255,a.check=$NU6N$var$crc32(a.check,D,2,0)),s=0,U=0,a.mode=$NU6N$var$EXLEN;case $NU6N$var$EXLEN:if(1024&a.flags){for(;U<16;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}a.length=s,a.head&&(a.head.extra_len=s),512&a.flags&&(D[0]=255&s,D[1]=s>>>8&255,a.check=$NU6N$var$crc32(a.check,D,2,0)),s=0,U=0}else a.head&&(a.head.extra=null);a.mode=$NU6N$var$EXTRA;case $NU6N$var$EXTRA:if(1024&a.flags&&((f=a.length)>n&&(f=n),f&&(a.head&&(w=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Array(a.head.extra_len)),$NU6N$var$utils.arraySet(a.head.extra,N,t,f,w)),512&a.flags&&(a.check=$NU6N$var$crc32(a.check,N,f,t)),n-=f,t+=f,a.length-=f),a.length))break $;a.length=0,a.mode=$NU6N$var$NAME;case $NU6N$var$NAME:if(2048&a.flags){if(0===n)break $;f=0;do{w=N[t+f++],a.head&&w&&a.length<65536&&(a.head.name+=String.fromCharCode(w))}while(w&&f<n);if(512&a.flags&&(a.check=$NU6N$var$crc32(a.check,N,f,t)),n-=f,t+=f,w)break $}else a.head&&(a.head.name=null);a.length=0,a.mode=$NU6N$var$COMMENT;case $NU6N$var$COMMENT:if(4096&a.flags){if(0===n)break $;f=0;do{w=N[t+f++],a.head&&w&&a.length<65536&&(a.head.comment+=String.fromCharCode(w))}while(w&&f<n);if(512&a.flags&&(a.check=$NU6N$var$crc32(a.check,N,f,t)),n-=f,t+=f,w)break $}else a.head&&(a.head.comment=null);a.mode=$NU6N$var$HCRC;case $NU6N$var$HCRC:if(512&a.flags){for(;U<16;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(s!==(65535&a.check)){$.msg=\"header crc mismatch\",a.mode=$NU6N$var$BAD;break}s=0,U=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),$.adler=a.check=0,a.mode=$NU6N$var$TYPE;break;case $NU6N$var$DICTID:for(;U<32;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}$.adler=a.check=$NU6N$var$zswap32(s),s=0,U=0,a.mode=$NU6N$var$DICT;case $NU6N$var$DICT:if(0===a.havedict)return $.next_out=i,$.avail_out=v,$.next_in=t,$.avail_in=n,a.hold=s,a.bits=U,$NU6N$var$Z_NEED_DICT;$.adler=a.check=1,a.mode=$NU6N$var$TYPE;case $NU6N$var$TYPE:if(e===$NU6N$var$Z_BLOCK||e===$NU6N$var$Z_TREES)break $;case $NU6N$var$TYPEDO:if(a.last){s>>>=7&U,U-=7&U,a.mode=$NU6N$var$CHECK;break}for(;U<3;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}switch(a.last=1&s,U-=1,3&(s>>>=1)){case 0:a.mode=$NU6N$var$STORED;break;case 1:if($NU6N$var$fixedtables(a),a.mode=$NU6N$var$LEN_,e===$NU6N$var$Z_TREES){s>>>=2,U-=2;break $}break;case 2:a.mode=$NU6N$var$TABLE;break;case 3:$.msg=\"invalid block type\",a.mode=$NU6N$var$BAD}s>>>=2,U-=2;break;case $NU6N$var$STORED:for(s>>>=7&U,U-=7&U;U<32;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if((65535&s)!=(s>>>16^65535)){$.msg=\"invalid stored block lengths\",a.mode=$NU6N$var$BAD;break}if(a.length=65535&s,s=0,U=0,a.mode=$NU6N$var$COPY_,e===$NU6N$var$Z_TREES)break $;case $NU6N$var$COPY_:a.mode=$NU6N$var$COPY;case $NU6N$var$COPY:if(f=a.length){if(f>n&&(f=n),f>v&&(f=v),0===f)break $;$NU6N$var$utils.arraySet(r,N,t,f,i),n-=f,t+=f,v-=f,i+=f,a.length-=f;break}a.mode=$NU6N$var$TYPE;break;case $NU6N$var$TABLE:for(;U<14;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(a.nlen=257+(31&s),s>>>=5,U-=5,a.ndist=1+(31&s),s>>>=5,U-=5,a.ncode=4+(15&s),s>>>=4,U-=4,a.nlen>286||a.ndist>30){$.msg=\"too many length or distance symbols\",a.mode=$NU6N$var$BAD;break}a.have=0,a.mode=$NU6N$var$LENLENS;case $NU6N$var$LENLENS:for(;a.have<a.ncode;){for(;U<3;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}a.lens[g[a.have++]]=7&s,s>>>=3,U-=3}for(;a.have<19;)a.lens[g[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,u={bits:a.lenbits},R=$NU6N$var$inflate_table($NU6N$var$CODES,a.lens,0,19,a.lencode,0,a.work,u),a.lenbits=u.bits,R){$.msg=\"invalid code lengths set\",a.mode=$NU6N$var$BAD;break}a.have=0,a.mode=$NU6N$var$CODELENS;case $NU6N$var$CODELENS:for(;a.have<a.nlen+a.ndist;){for(;E=(T=a.lencode[s&(1<<a.lenbits)-1])>>>16&255,b=65535&T,!((h=T>>>24)<=U);){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(b<16)s>>>=h,U-=h,a.lens[a.have++]=b;else{if(16===b){for(x=h+2;U<x;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(s>>>=h,U-=h,0===a.have){$.msg=\"invalid bit length repeat\",a.mode=$NU6N$var$BAD;break}w=a.lens[a.have-1],f=3+(3&s),s>>>=2,U-=2}else if(17===b){for(x=h+3;U<x;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}U-=h,w=0,f=3+(7&(s>>>=h)),s>>>=3,U-=3}else{for(x=h+7;U<x;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}U-=h,w=0,f=11+(127&(s>>>=h)),s>>>=7,U-=7}if(a.have+f>a.nlen+a.ndist){$.msg=\"invalid bit length repeat\",a.mode=$NU6N$var$BAD;break}for(;f--;)a.lens[a.have++]=w}}if(a.mode===$NU6N$var$BAD)break;if(0===a.lens[256]){$.msg=\"invalid code -- missing end-of-block\",a.mode=$NU6N$var$BAD;break}if(a.lenbits=9,u={bits:a.lenbits},R=$NU6N$var$inflate_table($NU6N$var$LENS,a.lens,0,a.nlen,a.lencode,0,a.work,u),a.lenbits=u.bits,R){$.msg=\"invalid literal/lengths set\",a.mode=$NU6N$var$BAD;break}if(a.distbits=6,a.distcode=a.distdyn,u={bits:a.distbits},R=$NU6N$var$inflate_table($NU6N$var$DISTS,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,u),a.distbits=u.bits,R){$.msg=\"invalid distances set\",a.mode=$NU6N$var$BAD;break}if(a.mode=$NU6N$var$LEN_,e===$NU6N$var$Z_TREES)break $;case $NU6N$var$LEN_:a.mode=$NU6N$var$LEN;case $NU6N$var$LEN:if(n>=6&&v>=258){$.next_out=i,$.avail_out=v,$.next_in=t,$.avail_in=n,a.hold=s,a.bits=U,$NU6N$var$inflate_fast($,o),i=$.next_out,r=$.output,v=$.avail_out,t=$.next_in,N=$.input,n=$.avail_in,s=a.hold,U=a.bits,a.mode===$NU6N$var$TYPE&&(a.back=-1);break}for(a.back=0;E=(T=a.lencode[s&(1<<a.lenbits)-1])>>>16&255,b=65535&T,!((h=T>>>24)<=U);){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(E&&0==(240&E)){for(_=h,k=E,m=b;E=(T=a.lencode[m+((s&(1<<_+k)-1)>>_)])>>>16&255,b=65535&T,!(_+(h=T>>>24)<=U);){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}s>>>=_,U-=_,a.back+=_}if(s>>>=h,U-=h,a.back+=h,a.length=b,0===E){a.mode=$NU6N$var$LIT;break}if(32&E){a.back=-1,a.mode=$NU6N$var$TYPE;break}if(64&E){$.msg=\"invalid literal/length code\",a.mode=$NU6N$var$BAD;break}a.extra=15&E,a.mode=$NU6N$var$LENEXT;case $NU6N$var$LENEXT:if(a.extra){for(x=a.extra;U<x;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}a.length+=s&(1<<a.extra)-1,s>>>=a.extra,U-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=$NU6N$var$DIST;case $NU6N$var$DIST:for(;E=(T=a.distcode[s&(1<<a.distbits)-1])>>>16&255,b=65535&T,!((h=T>>>24)<=U);){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(0==(240&E)){for(_=h,k=E,m=b;E=(T=a.distcode[m+((s&(1<<_+k)-1)>>_)])>>>16&255,b=65535&T,!(_+(h=T>>>24)<=U);){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}s>>>=_,U-=_,a.back+=_}if(s>>>=h,U-=h,a.back+=h,64&E){$.msg=\"invalid distance code\",a.mode=$NU6N$var$BAD;break}a.offset=b,a.extra=15&E,a.mode=$NU6N$var$DISTEXT;case $NU6N$var$DISTEXT:if(a.extra){for(x=a.extra;U<x;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}a.offset+=s&(1<<a.extra)-1,s>>>=a.extra,U-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){$.msg=\"invalid distance too far back\",a.mode=$NU6N$var$BAD;break}a.mode=$NU6N$var$MATCH;case $NU6N$var$MATCH:if(0===v)break $;if(f=o-v,a.offset>f){if((f=a.offset-f)>a.whave&&a.sane){$.msg=\"invalid distance too far back\",a.mode=$NU6N$var$BAD;break}f>a.wnext?(f-=a.wnext,d=a.wsize-f):d=a.wnext-f,f>a.length&&(f=a.length),c=a.window}else c=r,d=i-a.offset,f=a.length;f>v&&(f=v),v-=f,a.length-=f;do{r[i++]=c[d++]}while(--f);0===a.length&&(a.mode=$NU6N$var$LEN);break;case $NU6N$var$LIT:if(0===v)break $;r[i++]=a.length,v--,a.mode=$NU6N$var$LEN;break;case $NU6N$var$CHECK:if(a.wrap){for(;U<32;){if(0===n)break $;n--,s|=N[t++]<<U,U+=8}if(o-=v,$.total_out+=o,a.total+=o,o&&($.adler=a.check=a.flags?$NU6N$var$crc32(a.check,r,o,i-o):$NU6N$var$adler32(a.check,r,o,i-o)),o=v,(a.flags?s:$NU6N$var$zswap32(s))!==a.check){$.msg=\"incorrect data check\",a.mode=$NU6N$var$BAD;break}s=0,U=0}a.mode=$NU6N$var$LENGTH;case $NU6N$var$LENGTH:if(a.wrap&&a.flags){for(;U<32;){if(0===n)break $;n--,s+=N[t++]<<U,U+=8}if(s!==(4294967295&a.total)){$.msg=\"incorrect length check\",a.mode=$NU6N$var$BAD;break}s=0,U=0}a.mode=$NU6N$var$DONE;case $NU6N$var$DONE:R=$NU6N$var$Z_STREAM_END;break $;case $NU6N$var$BAD:R=$NU6N$var$Z_DATA_ERROR;break $;case $NU6N$var$MEM:return $NU6N$var$Z_MEM_ERROR;case $NU6N$var$SYNC:default:return $NU6N$var$Z_STREAM_ERROR}return $.next_out=i,$.avail_out=v,$.next_in=t,$.avail_in=n,a.hold=s,a.bits=U,(a.wsize||o!==$.avail_out&&a.mode<$NU6N$var$BAD&&(a.mode<$NU6N$var$CHECK||e!==$NU6N$var$Z_FINISH))&&$NU6N$var$updatewindow($,$.output,$.next_out,o-$.avail_out)?(a.mode=$NU6N$var$MEM,$NU6N$var$Z_MEM_ERROR):(l-=$.avail_in,o-=$.avail_out,$.total_in+=l,$.total_out+=o,a.total+=o,a.wrap&&o&&($.adler=a.check=a.flags?$NU6N$var$crc32(a.check,r,o,$.next_out-o):$NU6N$var$adler32(a.check,r,o,$.next_out-o)),$.data_type=a.bits+(a.last?64:0)+(a.mode===$NU6N$var$TYPE?128:0)+(a.mode===$NU6N$var$LEN_||a.mode===$NU6N$var$COPY_?256:0),(0===l&&0===o||e===$NU6N$var$Z_FINISH)&&R===$NU6N$var$Z_OK&&(R=$NU6N$var$Z_BUF_ERROR),R)}function $NU6N$var$inflateEnd($){if(!$||!$.state)return $NU6N$var$Z_STREAM_ERROR;var e=$.state;return e.window&&(e.window=null),$.state=null,$NU6N$var$Z_OK}function $NU6N$var$inflateGetHeader($,e){var a;return $&&$.state?0==(2&(a=$.state).wrap)?$NU6N$var$Z_STREAM_ERROR:(a.head=e,e.done=!1,$NU6N$var$Z_OK):$NU6N$var$Z_STREAM_ERROR}function $NU6N$var$inflateSetDictionary($,e){var a,N=e.length;return $&&$.state?0!==(a=$.state).wrap&&a.mode!==$NU6N$var$DICT?$NU6N$var$Z_STREAM_ERROR:a.mode===$NU6N$var$DICT&&$NU6N$var$adler32(1,e,N,0)!==a.check?$NU6N$var$Z_DATA_ERROR:$NU6N$var$updatewindow($,e,N,N)?(a.mode=$NU6N$var$MEM,$NU6N$var$Z_MEM_ERROR):(a.havedict=1,$NU6N$var$Z_OK):$NU6N$var$Z_STREAM_ERROR}var $NU6N$export$inflateReset=$NU6N$var$inflateReset;$NU6N$exports.inflateReset=$NU6N$export$inflateReset;var $NU6N$export$inflateReset2=$NU6N$var$inflateReset2;$NU6N$exports.inflateReset2=$NU6N$export$inflateReset2;var $NU6N$export$inflateResetKeep=$NU6N$var$inflateResetKeep;$NU6N$exports.inflateResetKeep=$NU6N$export$inflateResetKeep;var $NU6N$export$inflateInit=$NU6N$var$inflateInit;$NU6N$exports.inflateInit=$NU6N$export$inflateInit;var $NU6N$export$inflateInit2=$NU6N$var$inflateInit2;$NU6N$exports.inflateInit2=$NU6N$export$inflateInit2;var $NU6N$export$inflate=$NU6N$var$inflate;$NU6N$exports.inflate=$NU6N$export$inflate;var $NU6N$export$inflateEnd=$NU6N$var$inflateEnd;$NU6N$exports.inflateEnd=$NU6N$export$inflateEnd;var $NU6N$export$inflateGetHeader=$NU6N$var$inflateGetHeader;$NU6N$exports.inflateGetHeader=$NU6N$export$inflateGetHeader;var $NU6N$export$inflateSetDictionary=$NU6N$var$inflateSetDictionary;$NU6N$exports.inflateSetDictionary=$NU6N$export$inflateSetDictionary;var $NU6N$export$inflateInfo=\"pako inflate (from Nodeca project)\";$NU6N$exports.inflateInfo=$NU6N$export$inflateInfo;"},"sourceMaps":null,"error":null,"hash":"f7308e2b4955cf9d8147a25f682e0c03","cacheData":{"env":{},"imports":{"$require$../utils/common":["../utils/common","*"],"$require$./adler32":["./adler32","*"],"$require$./crc32":["./crc32","*"],"$require$./inffast":["./inffast","*"],"$require$./inftrees":["./inftrees","*"]},"exports":{"inflateReset":"$NU6N$export$inflateReset","inflateReset2":"$NU6N$export$inflateReset2","inflateResetKeep":"$NU6N$export$inflateResetKeep","inflateInit":"$NU6N$export$inflateInit","inflateInit2":"$NU6N$export$inflateInit2","inflate":"$NU6N$export$inflate","inflateEnd":"$NU6N$export$inflateEnd","inflateGetHeader":"$NU6N$export$inflateGetHeader","inflateSetDictionary":"$NU6N$export$inflateSetDictionary","inflateInfo":"$NU6N$export$inflateInfo"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}