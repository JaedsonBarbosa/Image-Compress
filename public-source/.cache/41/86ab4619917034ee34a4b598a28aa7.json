{"id":"RDVo","dependencies":[{"name":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\package.json","includedInParent":true,"mtime":1609120493490},{"name":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\package.json","includedInParent":true,"mtime":1609105065760},{"name":"./external","loc":{"line":3,"column":23},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\lib\\compressedObject.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\lib\\external.js"},{"name":"./stream/DataWorker","loc":{"line":4,"column":25},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\lib\\compressedObject.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\lib\\stream\\DataWorker.js"},{"name":"./stream/DataLengthProbe","loc":{"line":7,"column":30},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\lib\\compressedObject.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\lib\\stream\\DataLengthProbe.js"},{"name":"./stream/Crc32Probe","loc":{"line":6,"column":25},"parent":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\lib\\compressedObject.js","resolved":"C:\\Users\\jaeds\\Git Projects\\Locicomp\\public-source\\node_modules\\jszip\\lib\\stream\\Crc32Probe.js"}],"generated":{"js":"\"use strict\";var e=require(\"./external\"),r=require(\"./stream/DataWorker\"),s=require(\"./stream/DataLengthProbe\"),t=require(\"./stream/Crc32Probe\");s=require(\"./stream/DataLengthProbe\");function o(e,r,s,t,o){this.compressedSize=e,this.uncompressedSize=r,this.crc32=s,this.compression=t,this.compressedContent=o}o.prototype={getContentWorker:function(){var t=new r(e.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new s(\"data_length\")),o=this;return t.on(\"end\",function(){if(this.streamInfo.data_length!==o.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),t},getCompressedWorker:function(){return new r(e.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(e,r,o){return e.pipe(new t).pipe(new s(\"uncompressedSize\")).pipe(r.compressWorker(o)).pipe(new s(\"compressedSize\")).withStreamInfo(\"compression\",r)},module.exports=o;"},"sourceMaps":null,"error":null,"hash":"da678c8b141f5434e5d043770472a90f","cacheData":{"env":{}}}